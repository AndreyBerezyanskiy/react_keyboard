{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","isPressedKey","currentKey","handlePress","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAOaA,EAAb,4MACEC,MAAyB,CACvBC,cAAc,EACdC,WAAY,IAHhB,EAcEC,YAAc,SAACC,GACb,EAAKC,SAAS,CACZJ,cAAc,EACdC,WAAYE,EAAME,OAjBxB,uDAME,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAX/C,oBAqBE,WACE,MAAqCM,KAAKT,MAAlCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,WAEtB,OACE,qBAAKS,UAAU,MAAf,SACGV,EAEG,oBAAGU,UAAU,eAAb,sCAEGT,EAFH,OAOA,mBAAGS,UAAU,eAAb,2CAnCZ,GAAyBC,a,MCFzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.c313b5dd.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  isPressedKey: boolean,\n  currentKey: string,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isPressedKey: false,\n    currentKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handlePress);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handlePress);\n  }\n\n  handlePress = (event: KeyboardEvent) => {\n    this.setState({\n      isPressedKey: true,\n      currentKey: event.key,\n    });\n  };\n\n  render() {\n    const { isPressedKey, currentKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isPressedKey\n          ? (\n            <p className=\"App__message\">\n              The last pressed key is [\n              {currentKey}\n              ]\n            </p>\n          )\n          : (\n            <p className=\"App__message\">\n              Nothing was pressed yet\n            </p>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}